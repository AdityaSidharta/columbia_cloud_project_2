AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "album-website.com"
            WebsiteConfiguration: 
                IndexDocument: "index.html"

    S3Bucket2:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "bucket-album"
            Tags: 
              - 
                Key: "app"
                Value: "album"
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:*"
                    Function: !GetAtt LambdaFunction2.Arn

    S3Bucket3:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "album-lambdas"

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "lf2-album"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lf2-album-cde3c47d-5431-4c69-bb7e-3d73176abbd9"
                S3ObjectVersion: "b1e4.QSYPugm0fH1AEA.6DE16VRE_Uh2"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lf2-album-role-o5s1n1j6"
            Runtime: "python3.7"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction2:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "An Amazon S3 trigger that retrieves metadata for the object that has been updated."
            FunctionName: "lf1-album"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lf1-album-e008b300-d388-43a0-ba11-5f4806a0e647"
                S3ObjectVersion: "zHigTIPd97XA3CJbrFBc_eDAR7il4wbU"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lf1-al-role"
            Runtime: "python3.7"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512
            Tags: 
              - 
                Key: "lambda-console:blueprint"
                Value: "s3-get-object-python"

    LambdaFunction3:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "lf3-options"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lf3-options-d97d4c54-28fc-4d3c-b220-b41cf0e1b33c"
                S3ObjectVersion: "Ib9WZfEO9PkoZ.U5nDulgTocupbXXsFG"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lf3-options-role-k3ij8pyz"
            Runtime: "python3.7"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    OpenSearchServiceDomain:
        Type: "AWS::OpenSearchService::Domain"
        Properties:
            DomainName: "photos"
            EngineVersion: "OpenSearch_1.3"
            ClusterConfig: 
                ColdStorageOptions: 
                    Enabled: false
                DedicatedMasterEnabled: false
                InstanceCount: 1
                InstanceType: "t3.small.elasticsearch"
                ZoneAwarenessEnabled: false
                WarmEnabled: false
            AccessPolicies: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::${AWS::AccountId}:root\"},\"Action\":\"es:*\",\"Resource\":\"arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/photos/*\"}]}"
            SnapshotOptions: {}
            snapshot_options: {}
            EncryptionAtRestOptions: 
                Enabled: true
                KmsKeyId: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/248289c1-2cb3-465b-a04c-f6b34f2c53e2"
            NodeToNodeEncryptionOptions: 
                Enabled: true
            AdvancedOptions: 
                "indices.fielddata.cache.size": "20"
                "indices.query.bool.max_clause_count": "1024"
                override_main_response_version: "false"
                "rest.action.multi.allow_explicit_index": "true"
            EBSOptions: 
                EBSEnabled: true
                VolumeType: "gp3"
                VolumeSize: 10
                Iops: 3000
                Throughput: 125
            CognitoOptions: 
                Enabled: false
            DomainEndpointOptions: 
                EnforceHTTPS: true
                TLSSecurityPolicy: "Policy-Min-TLS-1-0-2019-07"
                CustomEndpointEnabled: false
            AdvancedSecurityOptions: 
                Enabled: false
                InternalUserDatabaseEnabled: false
                AnonymousAuthEnabled: false
            Tags: 
              - 
                Key: "app"
                Value: "album"

    ApiGatewayRestApi:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            Name: "AI Photo Search"
            Description: "AI Photo Search application, built during the Cloud and Big Data course at Columbia University."
            ApiKeySourceType: "HEADER"
            BinaryMediaTypes: 
              - "*/*"
            EndpointConfiguration: 
                Types: 
                  - "REGIONAL"

    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-09d3b3274b6c5d4aa"
            InstanceType: "t2.micro"
            AvailabilityZone: !Sub "${AWS::Region}a"
            Tenancy: "default"
            SubnetId: "subnet-04073c2e27e7b88f4"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-095adef64f4c449ce"
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0c0b30d420db08ab8"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            IamInstanceProfile: "ec2-codedeploy"
            Tags: 
              - 
                Key: "Name"
                Value: "MyCodePipelineDemo"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

